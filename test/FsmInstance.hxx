// The following code could be generated by a tool

// Include this file in .cxx or in .hxx below Owner declaration

// *******
// Note: All referenced functions must be instance member functions that
// are either public OR Fsm must be a friend class of Fsm::Owner
// *******

#pragma once

const Fsm::State Fsm::kOff("Off", std::mem_fn(&Fsm::Owner::FsmOffHandler), nullptr, nullptr,
                           std::mem_fn(&Fsm::Owner::FsmOffEntry), std::mem_fn(&Fsm::Owner::FsmOffExit));
const Fsm::State Fsm::kOn("On", std::mem_fn(&Fsm::Owner::FsmOnHandler), nullptr, &Fsm::kGreen,
                          std::mem_fn(&Fsm::Owner::FsmOnEntry), std::mem_fn(&Fsm::Owner::FsmOnExit),
                          Fsm::EFlags::kHistory);
const Fsm::State Fsm::kGreen("Green", std::mem_fn(&Fsm::Owner::FsmGreenHandler), &Fsm::kOn);
const Fsm::State Fsm::kYellow("Yellow", std::mem_fn(&Fsm::Owner::FsmYellowHandler), &Fsm::kOn);
const Fsm::State Fsm::kRed("Red", std::mem_fn(&Fsm::Owner::FsmRedHandler), &Fsm::kOn);
const Fsm::State Fsm::kRedYellow("RedYellow", std::mem_fn(&Fsm::Owner::FsmRedYellowHandler), &Fsm::kOn);

const Fsm::Transition Fsm::kYellowRedTransition(kRed, {std::mem_fn(&Fsm::Owner::FsmYellowRedTransitionAction1),
                                                       std::mem_fn(&Fsm::Owner::FsmYellowRedTransitionAction2)});

template <>
typename Fsm::StatePtr const FsmBase::kInitialState = &Fsm::kOff;
